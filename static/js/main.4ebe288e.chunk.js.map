{"version":3,"sources":["components/Header.js","components/CharacterSelection.js","components/IntroContent.js","components/CurrentCharacter.js","components/PracticeContent.js","components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Typography","variant","className","CharacterSelection","props","numRows","characters","length","rows","i","push","Grid","container","justify","alignItems","direction","slice","map","character","item","xs","color","Checkbox","checked","onChange","handleToggle","IntroContent","Fragment","Card","style","maxWidth","CardContent","Button","id","onClick","startButtonClicked","CurrentCharacter","currentCharacter","PracticeContent","React","useState","a","j","x","characterSet","concat","Math","floor","random","console","log","createCharacterSet","setCharacterSet","setCurrentCharacter","showTextField","setShowTextField","TextField","label","onKeyPress","e","key","preventDefault","target","value","exitButtonClicked","Body","Array","fill","setChecked","showPractice","setShowPractice","position","updatedChecked","index","includes","window","alert","App","darkTheme","createTheme","palette","mode","ThemeProvider","theme","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,OACtK,CAAC,SAAK,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,QAAS,CAAC,eAAM,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,QACjL,CAAC,SAAK,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,QAAS,CAAC,eAAM,OAAQ,CAAC,eAAM,QAAS,CAAC,eAAM,QACjL,CAAC,SAAK,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,OACtK,CAAC,SAAK,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,OACtK,CAAC,SAAK,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,OACtK,CAAC,SAAK,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC,eAAM,MAAO,CAAC,eAAM,OAAQ,CAAC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","file":"static/js/main.4ebe288e.chunk.js","sourcesContent":["import '../styles/Header.css'\r\nimport {Typography} from '@mui/material'\r\n\r\nconst Header = () => {\r\n    return(\r\n        <Typography variant=\"h3\" className=\"title\">\r\n            Read Tamil\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import '../styles/CharacterSelection.css'\r\nimport {Grid, Checkbox, Typography} from '@mui/material'\r\nimport * as React from 'react'\r\n\r\nfunction CharacterSelection(props) {\r\n\r\n    let numRows = props.characters.length / 12;\r\n    let rows = []\r\n\r\n    for(let i = 0; i < numRows; i++){\r\n        rows.push(\r\n            <div className={\"characterRow\" + \" rowType\" + i%2} key={i}> \r\n                <Grid \r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                >\r\n                {props.characters.slice(i*12,i*12+12).map((character) => (\r\n                    <Grid item xs={1} key={character}>\r\n                        {character[0]}\r\n                    </Grid>\r\n                ))}\r\n                {props.characters.slice(i*12,i*12+12).map((character) => (\r\n                    <Grid item xs={1} key={character}>\r\n                        <Typography color=\"text.secondary\">{character[1]}</Typography>\r\n                    </Grid>\r\n                ))}\r\n                </Grid>\r\n                <Checkbox checked={props.checked[i]} onChange={() => props.handleToggle(i)}/>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n    return (\r\n       rows\r\n    )\r\n}\r\n\r\nexport default CharacterSelection\r\n","import React from 'react'\r\nimport CharacterSelection from './CharacterSelection';\r\nimport {Grid, Card, CardContent, Typography, Button} from '@mui/material';\r\n\r\n\r\nfunction IntroContent(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid>\r\n                <Card style={{maxWidth:\"95vw\"}}>\r\n                    {/*<CardHeader title=\"Introduction\"/>*/}\r\n                    <CardContent>\r\n                        <Typography>\r\n                            This website allows you to study the Tamil alphabet. \r\n                            Select which rows of characters you would like to study below. \r\n                            Once you have selected the characters, press the Start button to continue.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent>\r\n                        <CharacterSelection checked={props.checked} handleToggle={props.handleToggle} characters={props.characters}/>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid>\r\n                <Button id=\"startButton\" variant=\"contained\" onClick={props.startButtonClicked}>Start</Button>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default IntroContent\r\n","import {Typography} from \"@mui/material\"\r\n\r\nfunction CurrentCharacter(props) {\r\n    return (\r\n        <Typography variant=\"h2\">\r\n            {props.currentCharacter}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default CurrentCharacter\r\n","import React from 'react'\r\nimport CurrentCharacter from './CurrentCharacter';\r\nimport {Grid, Card, CardContent, Typography, Button, TextField} from '@mui/material';\r\n\r\n\r\n\r\nfunction PracticeContent(props) {\r\n\r\n    function createCharacterSet(a) {\r\n\r\n        let characterSet = [];\r\n        for(let i = 0; i < props.checked.length; i++){\r\n            if(props.checked[i]){\r\n                characterSet = characterSet.concat(a.slice(i*12, i*12+12));\r\n            }\r\n        }\r\n\r\n        let j, x, i;\r\n        for (i = characterSet.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = characterSet[i];\r\n            characterSet[i] = characterSet[j];\r\n            characterSet[j] = x;\r\n        }\r\n\r\n        console.log(characterSet);\r\n        return characterSet;\r\n    }\r\n    \r\n\r\n    const [characterSet, setCharacterSet] = React.useState(createCharacterSet(props.characters));\r\n    const [currentCharacter, setCurrentCharacter] = React.useState(characterSet[0]);\r\n    const [showTextField, setShowTextField] = React.useState(true)\r\n\r\n    const completeMessage = \"Practice Complete!\"\r\n    const handleKeyPress = (e) => {\r\n\r\n        if(e.key === \"Enter\" || e.key === \" \"){\r\n            e.preventDefault();\r\n            \r\n            console.log(\"userInput: \", e.target.value);\r\n            console.log(\"expectedInput: \", currentCharacter[1])\r\n            \r\n            if(e.target.value === currentCharacter[1]){\r\n\r\n                if(characterSet.length > 1){\r\n                    setCurrentCharacter(characterSet[1]);\r\n                    setCharacterSet(characterSet.slice(1))\r\n                }\r\n                else{\r\n                    setShowTextField(false);\r\n                }\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid>\r\n                <Card style={{maxWidth:\"95vw\"}}>\r\n                    {showTextField &&\r\n                    <CardContent>\r\n                        <Typography>\r\n                            Enter the sound of the current letter using the English alphabet.\r\n                            Press \"Enter\" or \"Space\" to submit your answer.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    }\r\n                    <CardContent className=\"currentCharacter\">\r\n                        <CurrentCharacter currentCharacter={(showTextField) ? currentCharacter[0] : completeMessage}/>\r\n                    </CardContent>\r\n                    <CardContent className=\"textInput\">\r\n                        {showTextField && <TextField id=\"outlined-basic\" label=\"Enter Sound\" variant=\"outlined\" onKeyPress={handleKeyPress}/>}\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid>\r\n                <Button id=\"button\" variant=\"contained\" onClick={props.exitButtonClicked}>Back</Button>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default PracticeContent\r\n","import IntroContent from './IntroContent';\r\nimport {Grid} from '@mui/material';\r\nimport * as React from 'react';\r\nimport PracticeContent from './PracticeContent';\r\n\r\n\r\nfunction Body() {\r\n    const characters = [[\"அ\", \"a\"], [\"ஆ\", \"aa\"], [\"இ\", \"i\"], [\"ஈ\", \"ii\"], [\"உ\", \"u\"], [\"ஊ\", \"uu\"], [\"எ\", \"e\"], [\"ஏ\", \"ee\"], [\"ஐ\", \"ai\"], [\"ஒ\", \"o\"], [\"ஓ\", \"oo\"], [\"ஔ\", \"au\"],\r\n                        [\"க\", \"ka\"], [\"கா\", \"kaa\"], [\"கி\", \"ki\"], [\"கீ\", \"kii\"], [\"கு\", \"ku\"], [\"கூ\", \"kuu\"], [\"கெ\", \"ke\"], [\"கே\", \"kee\"], [\"கை\", \"kai\"], [\"கொ\", \"ko\"], [\"கோ\", \"koo\"], [\"கௌ\", \"kau\"],\r\n                        [\"ங\", \"nga\"], [\"ஙா\", \"ngaa\"], [\"ஙி\", \"ngi\"], [\"ஙீ\", \"ngii\"], [\"ஙு\", \"ngu\"], [\"ஙூ\", \"nguu\"], [\"ஙெ\", \"nge\"], [\"ஙே\", \"ngee\"], [\"ஙை\", \"ngai\"], [\"ஙொ\", \"ngo\"], [\"ஙோ\", \"ngoo\"], [\"ஙௌ\", \"ngau\"],\r\n                        [\"ச\", \"sa\"], [\"சா\", \"saa\"], [\"சி\", \"si\"], [\"சீ\", \"sii\"], [\"சு\", \"su\"], [\"சூ\", \"suu\"], [\"செ\", \"se\"], [\"சே\", \"see\"], [\"சை\", \"sai\"], [\"சொ\", \"so\"], [\"சோ\", \"soo\"], [\"சௌ\", \"sau\"],\r\n                        [\"ஞ\", \"nja\"], [\"ஞா\", \"njaa\"], [\"ஞி\", \"nji\"], [\"ஞீ\", \"njii\"], [\"ஞு\", \"nju\"], [\"ஞூ\", \"njuu\"], [\"ஞெ\", \"nje\"], [\"ஞே\", \"njee\"], [\"ஞை\", \"njai\"], [\"ஞொ\", \"njo\"], [\"ஞோ\", \"njoo\"], [\"ஞௌ\", \"njau\"],\r\n                        [\"ட\", \"ta\"], [\"டா\", \"taa\"], [\"டி\", \"ti\"], [\"டீ\", \"tii\"], [\"டு\", \"tu\"], [\"டூ\", \"tuu\"], [\"டெ\", \"te\"], [\"டே\", \"tee\"], [\"டை\", \"tai\"], [\"டொ\", \"to\"], [\"டோ\", \"too\"], [\"டௌ\", \"tau\"],\r\n                        [\"ண\", \"na\"], [\"ணா\", \"naa\"], [\"ணி\", \"ni\"], [\"ணீ\", \"nii\"], [\"ணு\", \"nu\"], [\"ணூ\", \"nuu\"], [\"ணெ\", \"ne\"], [\"ணே\", \"nee\"], [\"ணை\", \"nai\"], [\"ணொ\", \"no\"], [\"ணோ\", \"noo\"], [\"ணௌ\", \"nau\"],\r\n                        [\"த\", \"tha\"], [\"தா\", \"thaa\"], [\"தி\", \"thi\"], [\"தீ\", \"thii\"], [\"து\", \"thu\"], [\"தூ\", \"thuu\"], [\"தெ\", \"the\"], [\"தே\", \"thee\"], [\"தை\", \"thai\"], [\"தொ\", \"tho\"], [\"தோ\", \"thoo\"], [\"தௌ\", \"thau\"],\r\n                        [\"ந\", \"n-a\"], [\"நா\", \"n-aa\"], [\"நி\", \"n-i\"], [\"நீ\", \"n-ii\"], [\"நு\", \"n-u\"], [\"நூ\", \"n-uu\"], [\"நெ\", \"n-e\"], [\"நே\", \"n-ee\"], [\"நை\", \"n-ai\"], [\"நொ\", \"n-o\"], [\"நோ\", \"n-oo\"], [\"நௌ\", \"n-au\"],\r\n                        [\"ப\", \"pa\"], [\"பா\", \"paa\"], [\"பி\", \"pi\"], [\"பீ\", \"pii\"], [\"பு\", \"pu\"], [\"பூ\", \"puu\"], [\"பெ\", \"pe\"], [\"பே\", \"pee\"], [\"பை\", \"pai\"], [\"பொ\", \"po\"], [\"போ\", \"poo\"], [\"பௌ\", \"pau\"],\r\n                        [\"ம\", \"ma\"], [\"மா\", \"maa\"], [\"மி\", \"mi\"], [\"மீ\", \"mii\"], [\"மு\", \"mu\"], [\"மூ\", \"muu\"], [\"மெ\", \"me\"], [\"மே\", \"mee\"], [\"மை\", \"mai\"], [\"மொ\", \"mo\"], [\"மோ\", \"moo\"], [\"மௌ\", \"mau\"],\r\n                        [\"ய\", \"ya\"], [\"யா\", \"yaa\"], [\"யி\", \"yi\"], [\"யீ\", \"yii\"], [\"யு\", \"yu\"], [\"யூ\", \"yuu\"], [\"யெ\", \"ye\"], [\"யே\", \"yee\"], [\"யை\", \"yai\"], [\"யொ\", \"yo\"], [\"யோ\", \"yoo\"], [\"யௌ\", \"yau\"],\r\n                        [\"ர\", \"ra\"], [\"ரா\", \"raa\"], [\"ரி\", \"ri\"], [\"ரீ\", \"rii\"], [\"ரு\", \"ru\"], [\"ரூ\", \"ruu\"], [\"ரெ\", \"re\"], [\"ரே\", \"ree\"], [\"ரை\", \"rai\"], [\"ரொ\", \"ro\"], [\"ரோ\", \"roo\"], [\"ரௌ\", \"rau\"],\r\n                        [\"ல\", \"la\"], [\"லா\", \"laa\"], [\"லி\", \"li\"], [\"லீ\", \"lii\"], [\"லு\", \"lu\"], [\"லூ\", \"luu\"], [\"லெ\", \"le\"], [\"லே\", \"lee\"], [\"லை\", \"lai\"], [\"லொ\", \"lo\"], [\"லோ\", \"loo\"], [\"லௌ\", \"lau\"],\r\n                        [\"வ\", \"va\"], [\"வா\", \"vaa\"], [\"வி\", \"vi\"], [\"வீ\", \"vii\"], [\"வு\", \"vu\"], [\"வூ\", \"vuu\"], [\"வெ\", \"ve\"], [\"வே\", \"vee\"], [\"வை\", \"vai\"], [\"வொ\", \"vo\"], [\"வோ\", \"voo\"], [\"வௌ\", \"vau\"],\r\n                        [\"ழ\", \"zha\"], [\"ழா\", \"zhaa\"], [\"ழி\", \"zhi\"], [\"ழீ\", \"zhii\"], [\"ழு\", \"zhu\"], [\"ழூ\", \"zhuu\"], [\"ழெ\", \"zhe\"], [\"ழே\", \"zhee\"], [\"ழை\", \"zhai\"], [\"ழொ\", \"zho\"], [\"ழோ\", \"zhoo\"], [\"ழௌ\", \"zhau\"],\r\n                        [\"ள\", \"la\"], [\"ளா\", \"laa\"], [\"ளி\", \"li\"], [\"ளீ\", \"lii\"], [\"ளு\", \"lu\"], [\"ளூ\", \"luu\"], [\"ளெ\", \"le\"], [\"ளே\", \"lee\"], [\"ளை\", \"lai\"], [\"ளொ\", \"lo\"], [\"ளோ\", \"loo\"], [\"ளௌ\", \"lau\"],\r\n                        [\"ற\", \"ra\"], [\"றா\", \"raa\"], [\"றி\", \"ri\"], [\"றீ\", \"rii\"], [\"று\", \"ru\"], [\"றூ\", \"ruu\"], [\"றெ\", \"re\"], [\"றே\", \"ree\"], [\"றை\", \"rai\"], [\"றொ\", \"ro\"], [\"றோ\", \"roo\"], [\"றௌ\", \"rau\"],\r\n                        [\"ன\", \"na\"], [\"னா\", \"naa\"], [\"னி\", \"ni\"], [\"னீ\", \"nii\"], [\"னு\", \"nu\"], [\"னூ\", \"nuu\"], [\"னெ\", \"ne\"], [\"னே\", \"nee\"], [\"னை\", \"nai\"], [\"னொ\", \"no\"], [\"னோ\", \"noo\"], [\"னௌ\", \"nau\"],\r\n                        ];\r\n\r\n    const numRows = characters.length/12;\r\n    const [checked, setChecked] = React.useState(Array(numRows).fill(false));\r\n    const [showPractice, setShowPractice] = React.useState(false);\r\n\r\n    const handleToggle = (position) => {\r\n        const updatedChecked = checked.map((item, index) =>\r\n            index === position ? !item : item\r\n        )\r\n        setChecked(updatedChecked);\r\n    }\r\n\r\n    \r\n\r\n\r\n    function startButtonClicked(){\r\n        if(!checked.includes(true)){\r\n            window.alert(\"Please check at least one box.\");\r\n        }\r\n        else{\r\n            setShowPractice(true);\r\n        }\r\n    }\r\n\r\n    function exitButtonClicked(){\r\n        setShowPractice(false);\r\n    }\r\n\r\n    return(\r\n        <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n        >\r\n            {!showPractice &&       \r\n                <IntroContent checked={checked} handleToggle={handleToggle} startButtonClicked={startButtonClicked} characters={characters}/>\r\n            }\r\n            {showPractice &&\r\n                <PracticeContent exitButtonClicked={exitButtonClicked} characters={characters} checked={checked}/>\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","import Header from './components/Header'\nimport Body from './components/Body'\nimport {createTheme, ThemeProvider} from '@mui/material/styles'\nimport { CssBaseline } from '@mui/material';\n\nfunction App() {\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n    },\n  });\n\n  return (\n    <ThemeProvider theme ={darkTheme}>\n      <CssBaseline/>\n      <div className=\"container\">\n        <Header />\n        <Body />\n      </div>\n    </ThemeProvider>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}