{"version":3,"sources":["components/Header.js","components/CharacterSelection.js","components/IntroContent.js","components/CurrentCharacter.js","components/PracticeContent.js","components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Typography","variant","className","CharacterSelection","props","numRows","characters","length","rows","i","push","Grid","container","justify","alignItems","direction","slice","map","character","item","xs","color","Checkbox","checked","onChange","handleToggle","IntroContent","Fragment","Card","style","maxWidth","CardContent","Button","id","onClick","startButtonClicked","CurrentCharacter","currentCharacter","PracticeContent","React","useState","a","j","x","characterSet","concat","Math","floor","random","console","log","createCharacterSet","setCharacterSet","setCurrentCharacter","showTextField","setShowTextField","TextField","label","onKeyPress","e","key","preventDefault","target","value","exitButtonClicked","Body","setChecked","showPractice","setShowPractice","vowels","position","updatedChecked","index","includes","window","alert","App","darkTheme","createTheme","palette","mode","ThemeProvider","theme","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d5310bd.chunk.js","sourcesContent":["import '../styles/Header.css'\r\nimport {Typography} from '@mui/material'\r\n\r\nconst Header = () => {\r\n    return(\r\n        <Typography variant=\"h3\" className=\"title\">\r\n            Read Tamil\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import '../styles/CharacterSelection.css'\r\nimport {Grid, Checkbox, Typography} from '@mui/material'\r\nimport * as React from 'react'\r\n\r\nfunction CharacterSelection(props) {\r\n\r\n    let numRows = props.characters.length / 12;\r\n    let rows = []\r\n\r\n    for(let i = 0; i < numRows; i++){\r\n        rows.push(\r\n            <div className=\"characterRow\" key={i}> \r\n                <Grid \r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                >\r\n                {props.characters.slice(i*12,i*12+12).map((character) => (\r\n                    <Grid item xs={1} key={character}>\r\n                        {character[0]}\r\n                    </Grid>\r\n                ))}\r\n                {props.characters.slice(i*12,i*12+12).map((character) => (\r\n                    <Grid item xs={1} key={character}>\r\n                        <Typography color=\"text.secondary\">{character[1]}</Typography>\r\n                    </Grid>\r\n                ))}\r\n                </Grid>\r\n                <Checkbox checked={props.checked[i]} onChange={() => props.handleToggle(i)}/>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n\r\n    return (\r\n       rows\r\n    )\r\n}\r\n\r\nexport default CharacterSelection\r\n","import React from 'react'\r\nimport CharacterSelection from './CharacterSelection';\r\nimport {Grid, Card, CardContent, Typography, Button} from '@mui/material';\r\n\r\n\r\nfunction IntroContent(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid>\r\n                <Card style={{maxWidth:\"95vw\"}}>\r\n                    {/*<CardHeader title=\"Introduction\"/>*/}\r\n                    <CardContent>\r\n                        <Typography>\r\n                            This website allows you to study the tamil alphabet. \r\n                            Select which rows of characters you would like to study below. \r\n                            Once you have selected the characters, press the Start button to continue.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent>\r\n                        <CharacterSelection checked={props.checked} handleToggle={props.handleToggle} characters={props.characters}/>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid>\r\n                <Button id=\"button\" variant=\"contained\" onClick={props.startButtonClicked}>Start</Button>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default IntroContent\r\n","import {Typography} from \"@mui/material\"\r\n\r\nfunction CurrentCharacter(props) {\r\n    return (\r\n        <Typography variant=\"h2\">\r\n            {props.currentCharacter}\r\n        </Typography>\r\n    )\r\n}\r\n\r\nexport default CurrentCharacter\r\n","import React from 'react'\r\nimport CurrentCharacter from './CurrentCharacter';\r\nimport {Grid, Card, CardContent, Typography, Button, TextField} from '@mui/material';\r\n\r\n\r\n\r\nfunction PracticeContent(props) {\r\n\r\n    function createCharacterSet(a) {\r\n\r\n        let characterSet = [];\r\n        for(let i = 0; i < props.checked.length; i++){\r\n            if(props.checked[i]){\r\n                characterSet = characterSet.concat(a.slice(i*12, i*12+12));\r\n            }\r\n        }\r\n\r\n        let j, x, i;\r\n        for (i = characterSet.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = characterSet[i];\r\n            characterSet[i] = characterSet[j];\r\n            characterSet[j] = x;\r\n        }\r\n\r\n        console.log(characterSet);\r\n        return characterSet;\r\n    }\r\n    \r\n\r\n    const [characterSet, setCharacterSet] = React.useState(createCharacterSet(props.characters));\r\n    const [currentCharacter, setCurrentCharacter] = React.useState(characterSet[0]);\r\n    const [showTextField, setShowTextField] = React.useState(true)\r\n\r\n    const completeMessage = \"Practice Complete!\"\r\n    const handleKeyPress = (e) => {\r\n\r\n        if(e.key === \"Enter\" || e.key === \" \"){\r\n            e.preventDefault();\r\n            \r\n            console.log(\"userInput: \", e.target.value);\r\n            console.log(\"expectedInput: \", currentCharacter[1])\r\n            \r\n            if(e.target.value === currentCharacter[1]){\r\n\r\n                if(characterSet.length > 1){\r\n                    setCurrentCharacter(characterSet[1]);\r\n                    setCharacterSet(characterSet.slice(1))\r\n                }\r\n                else{\r\n                    setShowTextField(false);\r\n                }\r\n            }\r\n            e.target.value = \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid>\r\n                <Card style={{maxWidth:\"95vw\"}}>\r\n                    {showTextField &&\r\n                    <CardContent>\r\n                        <Typography>\r\n                            Enter the sound of the current letter using the English alphabet.\r\n                            Press \"Enter\" or \"Space\" to submit your answer.\r\n                        </Typography>\r\n                    </CardContent>\r\n                    }\r\n                    <CardContent className=\"currentCharacter\">\r\n                        <CurrentCharacter currentCharacter={(showTextField) ? currentCharacter[0] : completeMessage}/>\r\n                    </CardContent>\r\n                    <CardContent className=\"textInput\">\r\n                        {showTextField && <TextField id=\"outlined-basic\" label=\"Enter Sound\" variant=\"outlined\" onKeyPress={handleKeyPress}/>}\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid>\r\n                <Button id=\"button\" variant=\"contained\" onClick={props.exitButtonClicked}>Back</Button>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default PracticeContent\r\n","import IntroContent from './IntroContent';\r\nimport {Grid} from '@mui/material';\r\nimport * as React from 'react';\r\nimport PracticeContent from './PracticeContent';\r\n\r\n\r\nfunction Body() {\r\n\r\n    const [checked, setChecked] = React.useState([false, false]);\r\n    const [showPractice, setShowPractice] = React.useState(false);\r\n\r\n    const handleToggle = (position) => {\r\n        const updatedChecked = checked.map((item, index) =>\r\n            index === position ? !item : item\r\n        )\r\n        setChecked(updatedChecked);\r\n    }\r\n\r\n    const vowels = [[\"அ\", \"a\"],\r\n                    [\"ஆ\", \"aa\"],\r\n                    [\"இ\", \"i\"], \r\n                    [\"ஈ\", \"ii\"], \r\n                    [\"உ\", \"u\"], \r\n                    [\"ஊ\", \"uu\"], \r\n                    [\"எ\", \"e\"], \r\n                    [\"ஏ\", \"ee\"], \r\n                    [\"ஐ\", \"ai\"], \r\n                    [\"ஒ\", \"o\"], \r\n                    [\"ஓ\", \"oo\"], \r\n                    [\"ஔ\", \"au\"],\r\n                    [\"க\", \"ka\"],\r\n                    [\"கா\", \"kaa\"], \r\n                    [\"கி\", \"ki\"], \r\n                    [\"கீ\", \"kii\"],\r\n                    [\"கு\", \"ku\"],\r\n                    [\"கூ\", \"kuu\"],\r\n                    [\"கெ\", \"ke\"],\r\n                    [\"கே\", \"kee\"],\r\n                    [\"கை\", \"kai\"],\r\n                    [\"கொ\", \"ko\"],\r\n                    [\"கோ\", \"koo\"],\r\n                    [\"கௌ\", \"kau\"],\r\n                    ]                    \r\n\r\n\r\n    function startButtonClicked(){\r\n        if(!checked.includes(true)){\r\n            window.alert(\"Please check at least one box.\");\r\n        }\r\n        else{\r\n            setShowPractice(true);\r\n        }\r\n    }\r\n\r\n    function exitButtonClicked(){\r\n        setShowPractice(false);\r\n    }\r\n\r\n    return(\r\n        <Grid\r\n            container\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            direction=\"column\"\r\n        >\r\n            {!showPractice &&       \r\n                <IntroContent checked={checked} handleToggle={handleToggle} startButtonClicked={startButtonClicked} characters={vowels}/>\r\n            }\r\n            {showPractice &&\r\n                <PracticeContent exitButtonClicked={exitButtonClicked} characters={vowels} checked={checked}/>\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","import Header from './components/Header'\nimport Body from './components/Body'\nimport {createTheme, ThemeProvider} from '@mui/material/styles'\nimport { CssBaseline } from '@mui/material';\n\nfunction App() {\n\n  const darkTheme = createTheme({\n    palette: {\n      mode: 'dark',\n    },\n  });\n\n  return (\n    <ThemeProvider theme ={darkTheme}>\n      <CssBaseline/>\n      <div className=\"container\">\n        <Header />\n        <Body />\n      </div>\n    </ThemeProvider>\n    \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}